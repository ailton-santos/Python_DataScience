# -*- coding: utf-8 -*-
"""Prova-Final.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qnldNN91M5na6eXJt9CkPSVDoybddrhb
"""

# Encontre um dado público e aplique o que aprendeu nele
# Após deixa-lo visivel, pesquise sobre o dado e prepare uma apresentação
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# Dados em questão: ENEM
# Recorde de inscrições e notas MIL(redações)
# Comparação de 2023 e 2024(mais recentes), entre si
# E entre os recordes de inscrições e notas MIL

# (2023)

# Inscritos: 4.018.414
# Participantes: 2.734.100 (68%)
#-------------------------------------------------------------------------------
# (2024)

# Inscritos: 4.325.960
# Participantes: 3.180.388 (73,5%)
#-------------------------------------------------------------------------------
# Inscrições recorde(2014)

# Inscritos: 8,72 milhões
# Participantes: 6,2 milhões
#-------------------------------------------------------------------------------
# (Redações MIL 2024)

# Nordeste: 5

# Sudeste: 5

# Sul: 0

# Centro-Oeste: 2

# Norte: 0
#-------------------------------------------------------------------------------
# (Redações MIL 2023)

# Nordeste: 25

# Sudeste: 18

# Sul: 7

# Centro-Oeste: 5

# Norte: 4
#-------------------------------------------------------------------------------
# Recorde MIL (2013)

# Nordeste: 159

# Sudeste: 233

# Sul: 79

# Centro-Oeste: 16

# Norte: 17

# ----------------------------
# GRÁFICO 1 - Inscritos x Participantes (por ano)
# ----------------------------
anos = ['2014', '2023', '2024']
inscritos = [8.72, 4.018, 4.325]  # em milhões
participantes = [6.2, 2.734, 3.180]  # em milhões

plt.figure(figsize=(10, 6))
bar_width = 0.35
x = range(len(anos))

plt.bar(x, inscritos, width=bar_width, label='Inscritos', color='skyblue')
plt.bar([i + bar_width for i in x], participantes, width=bar_width, label='Participantes', color='orange')

plt.xlabel('Ano')
plt.ylabel('Milhões de Pessoas')
plt.title('ENEM - Inscritos x Participantes')
plt.xticks([i + bar_width / 2 for i in x], anos)
plt.legend()
plt.grid(axis='y', linestyle='--', alpha=0.6)
plt.tight_layout()
plt.show()

# ----------------------------
# GRÁFICO 2 - Redações nota MIL por região (2023 x 2024)
# ----------------------------

# Dados
regioes = ['Nordeste', 'Sudeste', 'Sul', 'Centro-Oeste', 'Norte']
df = pd.DataFrame({
    '2023': [25, 18, 7, 5, 4],
    '2024': [5, 5, 0, 2, 0]
}, index=regioes)

# Gráfico de barras lado a lado
x = np.arange(len(df))
largura = 0.35

plt.figure(figsize=(10,6))
plt.bar(x - largura/2, df['2023'], width=largura, label='2023', color='skyblue')
plt.bar(x + largura/2, df['2024'], width=largura, label='2024', color='salmon')

plt.xticks(x, regioes, rotation=45)
plt.title('Redações Nota MIL por Região (ENEM 2023 x 2024)')
plt.xlabel('Região')
plt.ylabel('Quantidade')
plt.legend()
plt.grid(axis='y', linestyle='--', alpha=0.5)
plt.tight_layout()
plt.show()

# ----------------------------
# GRÁFICO 3 - Redações nota MIL por região junto do recorde (2013 x 2023 x 2024)
# ----------------------------

RED_rec = pd.DataFrame({
    'MIL13': [159, 233, 79, 16, 17],
'MIL23': [25, 18, 7, 5, 4],
'MIL24': [5, 5, 0, 2, 0]
}, index=regioes)
plt.figure(figsize=(10,6))
RED_rec.plot(kind='bar', width = 1 )
plt.title('Redações notas MIL em comparação ao recorde de 2013')
plt.ylabel('Notas MIL')
plt.xlabel('Regiões')
plt.xticks(rotation=45)
plt.legend(title='Ano')
plt.grid(axis='y', linestyle='--', alpha=0.6)
plt.tight_layout()
plt.show()