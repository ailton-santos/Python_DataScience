# -*- coding: utf-8 -*-
"""Atv10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/oliver22-2/Senai-Python/blob/main/Atv10.ipynb
"""

import pandas as pd

# Criação do DataFrame
cidades_br = pd.DataFrame({
    'Cidade': ['São Paulo', 'Rio de Janeiro', 'Belo Horizonte', 'Porto Alegre', 'Curitiba'],
    'Estado': ['SP', 'RJ', 'MG', 'RS', 'PR'],
    'População (milhões)': [12.3, 6.7, 2.5, 1.5, 1.9],
    'Capital': [True, True, True, True, True]
})

# Exiba o DataFrame completo
print("DataFrame completo:")
print(cidades_br)

# Exiba as 3 primeiras linhas
print("\n3 primeiras linhas:")
print(cidades_br.head(3))

# Exiba 2 linhas aleatórias
print("\n2 linhas aleatórias:")
print(cidades_br.sample(2))

# Acesse e exiba apenas a coluna 'Cidade'
print("\nColuna 'Cidade':")
print(cidades_br['Cidade'])

# Acesse e exiba as colunas 'Estado' e 'População (milhões)'
print("\nColunas 'Estado' e 'População (milhões)':")
print(cidades_br[['Estado', 'População (milhões)']])

# Adicione uma nova coluna 'Área (km²)'
cidades_br['Área (km²)'] = [1521, 1200, 331, 496, 435]
print("\nDataFrame com nova coluna 'Área (km²)':")
print(cidades_br)

# Altere 'Capital' para False nas cidades indicadas
cidades_br.loc[cidades_br['Cidade'].isin(['Porto Alegre', 'Curitiba']), 'Capital'] = False
print("\nDataFrame com alteração na coluna 'Capital':")
print(cidades_br)

# Renomeie as colunas
cidades_br.columns = ['Nome da Cidade', 'UF', 'Habitantes (M)', 'Capital', 'Tamanho (km²)']
print("\nDataFrame com colunas renomeadas:")
print(cidades_br)

# Resumo estatístico com describe()
print("\nResumo estatístico:")
print(cidades_br.describe())

# Cidades com população > 2.0 milhões
print("\nCidades com mais de 2.0 milhões de habitantes:")
print(cidades_br[cidades_br['Habitantes (M)'] > 2.0])

# Exclua a coluna 'Tamanho (km²)'
cidades_br = cidades_br.drop(columns=['Tamanho (km²)'])
print("\nDataFrame após excluir 'Tamanho (km²)':")
print(cidades_br)

# Exiba a primeira linha com iloc
print("\nPrimeira linha com iloc:")
print(cidades_br.iloc[0])

# Exiba as linhas de índice 1 a 3 com iloc
print("\nLinhas de índice 1 a 3 com iloc:")
print(cidades_br.iloc[1:4])

# Exiba colunas 'UF' e 'Habitantes (M)' das linhas 0 e 4 com iloc
print("\nColunas 'UF' e 'Habitantes (M)' das linhas 0 e 4:")
print(cidades_br.iloc[[0, 4]][['UF', 'Habitantes (M)']])