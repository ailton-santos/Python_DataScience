# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lgaU7vQhc5HxbhHQZ8GIX7MN4U1d7mv5
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import solve_ivp
from scipy.optimize import minimize

# Equação a função y'= -2 * y com y(0)=1
# Definindo a variavel (função que representa a derivada em relação a t)
def dydt (t,y):
  return -2 * y

#Condições Iniciais
y0= [1]
t_span = (0,5) #Intervalo de tempo

# Resolução
solution = solve_ivp(dydt,t_span, y0, t_eval=np.linspace(0, 5, 100))

solution

plt.plot(solution.t, solution.y[0], label="y(t)")
plt.xlabel("Tempo t")
plt.ylabel("y(t)")
plt.title("Solução da Equação Diferencial y' = 2 * y")
plt.legend()
plt.show()

#Encontrar o mínimo da função f(x) = (x-3)^2 + 4
def f(x):
    return (x-3)** 2 + 4

x0=[0]

#Metodo BFGS para encontrar o minimo da função
result = minimize(f, x0, method='BFGS')

print('Valor mínimo de f(x):', result.fun)
print('Valor de x que minimiza f(x):', result.x)

