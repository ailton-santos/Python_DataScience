# -*- coding: utf-8 -*-
"""Conheça o Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import solve_ivp
from scipy.optimize import minimize

# ~Equação a função y'= -2 * y com y(0)=1
#definindo a variavel (funçao que represente)
def dydt (t,y):
  return -2 * y

#Cindiçoes iniciais
y0= [1]
t_span = (0,5) #intervalo de tempo

#resoluçao
solution = solve_ivp(dydt,t_span,y0,t_eval=np.linspace(0,5,100))

plt.plot(solution.t, solution.y[0],label='y(t)')
plt.xlabel("tempo t")
plt.ylabel('y(t)')
plt.legend("solucao da Equacao Diferencial y'=2*y ")
plt.title("Solucao da Equacao Diferencial")
plt.legend()
plt.show()

#Encontre o minimo da funçao f(x) = (x-3)^2 + 4
def f(x):
  return (x-3) ** 2 + 4

x0=[0]

#matodo BFGS para encontrar o minimo da funçao
result = minimize(f, x0, method='BFGS')

print('valor minimo de f(x):', result.fun)
print('valor de x que minimiza',result.x)