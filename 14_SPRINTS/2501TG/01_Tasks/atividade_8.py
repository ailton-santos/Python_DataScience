# -*- coding: utf-8 -*-
"""Atividade_8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/danielbr20998/Atividades-Senai/blob/main/Atividade_8.ipynb
"""

# ATV 8 = Analise de peças de produção:
# Uma fábrica de peças mecânicas registrou sua produção de unidades
# Ao longo de 4 semanas para 3 linhas de produção.
# Cada linha fabrica um tipo diferente de peça
# (A, B e C). Os dados foram organizados da seguinte forma:
# Linhas (0 a 3): semanas 1 a 4
# Colunas (0 a 2): peças A, B e C

import statistics as st
import numpy as np
import random as ran

dados = np.random.randint(100, 301, size=(3, 4))
print(dados)

prod_A = dados[0]
prod_B = dados[1]
prod_C = dados[2]
semana_1 = dados[:, 0]
semana_2 = dados[:, 1]
semana_3 = dados[:, 2]
semana_4 = dados[:, 3]

print(prod_A)
print(prod_B)
print(prod_C)
print(semana_1)
print(semana_2)
print(semana_3)
print(semana_4)

# Lista feita, ok
# Produção total de cada peça ao longo das 4 semanas

total_A = sum(prod_A)
total_B = sum(prod_B)
total_C = sum(prod_C)
print('Total do produto A:', total_A)
print('Total do produto B:', total_B)
print('Total do produto C:', total_C)

# Totais feitos, ok
# Total de produção de peças por semana

linhas, colunas = dados.shape

somas = [0] * linhas  # Cria uma lista para armazenar a soma das médias de cada peça

for i in range(linhas):
    for j in range(colunas):
        media = dados[i, j] / 5
        somas[i] += media  # Acumula a média na posição da peça correspondente
        print(f"Média diária da peça {chr(65 + i)} na semana {j+1}: {media}")

# Exibe a soma das médias de cada peça
for i in range(linhas):
    print(f"Soma das médias da peça {chr(65 + i)}: {somas[i]:.2f}")

# Total de peças classificado, ok
# Total de produção por semana

semana = ['Semana 1', 'Semana 2', 'Semana 3', 'Semana 4']
total_geral2 = [sum(semana_1), sum(semana_2), sum(semana_3), sum(semana_4)]
print(semana, '\n', total_geral2)

maior_semana, semana_maior = max(zip(total_geral2, semana))
print('Semana com maior produção:', semana_maior, '-', maior_semana)

# Total semanal, ok
# Média semanal de cada peça

media_sem1 = st.mean(semana_1)
media_sem2 = st.mean(semana_2)
media_sem3 = st.mean(semana_3)
media_sem4 = st.mean(semana_4)

medias = {
    'Semana 1': media_sem1,
    'Semana 2': media_sem2,
    'Semana 3': media_sem3,
    'Semana 4': media_sem4
}
maior_semana = max(medias, key=medias.get)
maior_media = medias[maior_semana]

print(f'A maior média semanal foi {maior_media:.2f} na {maior_semana}.')

# Média semanal, ok
# Crescimento percentual, específico da peça A(variação percentual)

prod_A = dados[0]

variancia1_2 = ((prod_A[1] - prod_A[0]) / prod_A[0]) * 100
variancia2_3 = ((prod_A[2] - prod_A[1]) / prod_A[1]) * 100
variancia3_4 = ((prod_A[3] - prod_A[2]) / prod_A[2]) * 100

print(f'{variancia1_2:.2f}%', '\n', f'{variancia2_3 :.2f}%', '\n', f'{variancia3_4 :.2f}%')

# Variancia do A feita, ok
# Lista das peças abaixo da média de seu tipo

# Comparação dos dados com as somas
maiores = []
menores_ou_iguais = []

for i in range(linhas):
    for j in range(colunas):
        produto = chr(65 + i)  # 'A', 'B', ...
        valor = dados[i, j]
        soma = somas[i]
        if valor > soma:
            maiores.append((produto, j+1, valor))
        else:
            menores_ou_iguais.append((produto, j+1, valor))

print("\nValores maiores que a soma das médias:")
for produto, semana, valor in maiores:
    print(f"Peça {produto}, Semana {semana}: {valor}")

print("\nValores menores ou iguais à soma das médias:")
for produto, semana, valor in menores_ou_iguais:
    print(f"Peça {produto}, Semana {semana}: {valor}")